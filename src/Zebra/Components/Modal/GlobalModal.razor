@using Zebra.Services.Modal
@using Microsoft.JSInterop
@inject ModalService ModalService
@inject IJSRuntime Js
@implements IDisposable

<dialog @ref="_dialogRef">
	<div class="content-container">

	</div>
	<h1>@Title</h1>
	<div class="content-wrapper">
		@Content
	</div>
</dialog>

@code {
	private ElementReference _dialogRef = default!;
	private IJSObjectReference _jsModule = default!;

	bool Shown { get; set; }

	RenderFragment? Content { get; set; }
	string? Title { get; set; }

	protected override void OnInitialized()
	{
		ModalService.OnOpen += OpenModal;
		ModalService.OnClose += CloseModal;
	}

	public void Dispose()
	{
		ModalService.OnOpen -= OpenModal;
		ModalService.OnClose -= CloseModal;
	}

	private async void OpenModal(object? sender, ModalContent e)
	{
		if (Shown)
			CloseModal(sender, EventArgs.Empty);

		Content = e.Content;
		Title = e.Title;
		Shown = true;
		await _jsModule.InvokeVoidAsync("showModal", _dialogRef);
		StateHasChanged();
	}

	private async void CloseModal(object? sender, EventArgs e)
	{
		Shown = false;
		await _jsModule.InvokeVoidAsync("closeModal", _dialogRef);
		StateHasChanged();
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		_jsModule = await Js.InvokeAsync<IJSObjectReference>(
			"import", "./_content/Zebra/Components/Modal/GlobalModal.razor.js"
		);
	}
}